// Mocks generated by Mockito 5.4.5 from annotations
// in github/test/features/github/data/repositories/repositories_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i3;

import 'package:github/features/github/data/api/github_api.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

/// A class which mocks [GitHubApi].
///
/// See the documentation for Mockito's code generation for more information.
class MockGitHubApi extends _i1.Mock implements _i2.GitHubApi {
  MockGitHubApi() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i3.Future<Map<String, dynamic>> searchRepositories(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchRepositories, [query]),
            returnValue: _i3.Future<Map<String, dynamic>>.value(
              <String, dynamic>{},
            ),
          )
          as _i3.Future<Map<String, dynamic>>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getRepositoryIssues(
    String? owner,
    String? repo,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getRepositoryIssues, [owner, repo]),
            returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i3.Future<List<Map<String, dynamic>>>);

  @override
  _i3.Future<List<Map<String, dynamic>>> getRepositoryPullRequests(
    String? owner,
    String? repo,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getRepositoryPullRequests, [owner, repo]),
            returnValue: _i3.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i3.Future<List<Map<String, dynamic>>>);
}
